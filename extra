https://code.visualstudio.com/download
https://github.com/
https://nodejs.org/en/

Basic JavaScript
Npm
React = 3
Mock API
json-server
React-JWT(Login Logout)-2
React-GarphQL-1
Depolyment
-> MERN
-> Docker
-> heroku
-> Nginx
Github
React_hooks -1
Basic React Native=1
React-Redux =1
React-Redux =1
Testing Jest Enzime
React-Saga -1
React-with-typescript-1
--------Backend NOT--------------
API
GarphQL
Login/Logout


///////////////
React
> React is a frontend lib/framework which help
to build single page application using components

> open source
> (npm) >> node package manager


JSON > JavaScript Object Notation 
Way to represent the data

[
    {
        name:'John',
        class:'Ui'
    },
    {
        name:'Kevin',
        class:'React',
        city:'Amsterdam'
    }
]

>>>>>>>>>>>Package.json<<<<<<<<<<<
> Entry point to application
> Main file
    > Meta data
    > Script (start ,test, build)
> All Packages

//////////////
Step To generate package.json
//////////////
**NodeJs must be installed in system
> open terminal/cmd
> go inside the folder cd 
> npm init 
> answer all question
> type "yes"

//////////////
Step To install packages
//////////////
**NodeJs must be installed in system
> open terminal/cmd
> go inside the folder cd 
> npm i packagename


////////////
Step to generate react app 
///////////
#window
#One time in new system
> open cmd as admin
> npm i -g create-react-app

#Next every time you want new app
> open cmd
> go inside folder
> create-react-app appname

#Mac
#One time in new system
> open terminal
> sudo npm i -g create-react-app

#Next every time you want new app
> open terminal
> go inside folder
> create-react-app appname


////////////////////
> open terminal/cmd
> npx create-react-app appname


////////////
functional
> Dumb Component 
> Display Purpose
> It cannot maintain state

class
> logical components
> api call, business logical ,Display
> It can maintain state

hooks


function test(a,b){
    var out = [a,b]
    return out
}

test(3,2)
2
function test(a,b){
    return a,b
}

test("hi","bie")
"bie"
function test(a,b){
    return a,b
}

test("bie","hi")




state 
> state act like a local variable
> Any data interaction will happen through data
> state is mutable
> scope of state will be inside one components

Props
> help to transfer data between two nested components
> props are immutable


map
filter
indexof

var a= [2,3,6,8,9,1,4,7]
a.map((data) => {return data*2})
[4, 6, 12, 16, 18, 2, 8, 14]

a.map((data) => {return `<h1>${data*2}</h1>`})

var a= [2,3,6,8,9,1,4,7]
a.filter((data) => {return data>3})
[6, 8, 9, 4, 7]

var city = ["Delhi","Newyork","Boston","Amsterdam"]
city.indexOf('Delhi')
0
city.indexOf('Boston')
2
city.indexOf('London')
-1
city.indexOf('Mumbai')
-1
city[0].indexOf('a')
-1
city[3].indexOf('a')
7

parent -> child (props)
child -> parent (props with function)

function add(a,b){
    return a+b
}

add(1,2)